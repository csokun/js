# Atom react component templates
# Inspired by: Cory House (Building Applications with React and Redux Course)
# Atom: File -> Snippets
# Copy & Paste the following snippets

'.source.js':
  'React Class Component':
    'prefix': 'react-class'
    'body': """
import React, {PropTypes} from 'react';

class ${1:Class1} extends React.Component {
  render () {

  }
}

${1}.propTypes = {
  // myProps: PropTypes.string.isRequired
}

export default $1;
    """

'.source.js':
  'React Container Component':
    'prefix': 'react-smart'
    'body': """
import React, {PropTypes} from 'react';
import {connect} from 'react-redux';
import {bindActionCreators} from 'redux';
import * as ${2:actionHandler} from '../actions/${2}';

class ${1:NewPage} extends React.Component {
  constructor(props, context) {
    super(props, context);
  }
}

render() {
  return (
    $3
  );
}

${1}.propTypes = {
  // myProps = React.PropTypes.string.isRequired
};

function mapStateToProps(state) {
  return {
    state: state
  };
}

function mapDispatchToProps(dispatch) {
  return {
    actions: bindActionCreators($2, dispatch)
  };
}

export default connect(mapStateToProps, mapDispatchToProps)($1);
    """

'.source.js':
  'React Stateless Component':
    'prefix': 'react-stateless'
    'body': """
import React, {PropTypes} from 'react';

const ${1:StatelessComponent} extend React.Component {
  return (
    $2
  );
}

${1}.PropTypes = {
  // myProp: ProptTypes.string.isRequired
};

export default $1;
    """
